1. Создаем новый репозиторий на Гитхаб, не ставим галку инициализировать с ридми.
2. В Eclipse если уж совсем по правилам, создадим файлик README.md с содержанием: # Homework: Student Group:
	правый клик на проекте New->File, вводим имя - README.md -> finish
	В открывшемся файле заполняем заголовок, предварительно поставив символ "# Homework: Student Group"
	Ниже можно описать задачу.

3. Создаем локальный репозиторий: правый клик на проекте - Team->Share Project
   Ставим галку "Use or create repository in parent folder of project", проверяем пути (мало ли) и нажимаем кнопку "Create repository" и нажимаем "Finish".
4. Под окном Package Explorer должно появиться окно Git Repositories, если не открылось или вы случайно его закрыли, его можно открыть так: правый клик мышкой в Package explorer, пункт Show in->Git Repositories(по сути оно пока не пригодится, но знать про него стоит, да и поковырять можно).
5. Итак, после создания репозитория рядом с нашим проектом появилось название репозитория и надпись NO-HEAD(это потому-что еще не создана ни одна ветвь репозитория - branch), а на элементах проекта - знаки вопроса (это признак того, что для репозитория еще не установлены правила для отслеживания изменений в файлах).
6. Произведем первый коммит при этом запустится визард:  будет создан branch:master и настроены правила отслеживания:
	- правый клик на проекте, выбираем пункт Team->Commit...
	- заполняем поля идентификации. ВНИМАНИЕ! это не логин на гитхаб или еще куда-нибудь, а просто идентификаторы владельца репозитория, подтверждаем
	- обязательно заполняем commit massage - нужно будет заполнять при каждом коммите (без этого никак). первый коммит обычно так и называют - First Commit,
	ниже настраиваем какие файлы проекта будут отслеживаться, я выбрал все. 
Кнопка Commit просто локально подтвердит согласие на обновление локального репозитария, а мы выберем Commit and Push, чтобы запустился диалог настройки соединения:
Remote name - обычно по-умолчанию origin, если отправлять изменения на несколько хабов, то у каждого соединения должно быть свое имя
URI - ссылка которую выдает гитхаб после создания репозитория в поле "Quick setup — if you’ve done this kind of thing before"
	https://github.com/<имя пользователя гитхаб>/<имя репозитория>.git
Остальные поля должны заполниться автоматически.

Заполняем логин и пароль на гитхаб и нажимаем Next
В следующем окне оставим все поля по-умолчанию. С тонкостями можно будет разобраться в процессе. В основном это касается командной работы с репозиторием.
Нажимем Next и у нас появляется диалог что будет сделано и на каком хосте. В нашем случае наш локальный бранч master будет создан на удаленном хабе.
master-master[new branch]
Если согласны - нажимаем "Finish"

Получаем протокол выполненной работы от EGit.

Если внесли изменения в локальный проект и хотите обновить удаленный репозитарий: правый клик на проекте, выбираем пункт Team->Commit... 
	заполняем сообщение, убеждаемся что будут обновлены нужные файлы -> Commit and Push
	Готово! новая версия файла уже на месте! При этом на гистхаб живет история изменений и всегда можно откатиться или посмотреть старую версию!

Если внесли изменения непосредственно на хабе или с другой машины - втянуть их (переписав локальные файлы) - команда pull
